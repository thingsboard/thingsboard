/*
 * Copyright Â© 2016-2025 ThingsBoard, Inc. All Rights Reserved.
 * This source code is licensed under the Apache 2.0 license found in the LICENSE file.
 */

pipeline {
    agent {
        label 'docker'
    }
    
    environment {
        TB_VERSION = '4.2.0'
        DOCKER_REGISTRY = 'your-registry.com' // Replace with your registry
        QA_PORT = '8081'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh """
                ./mvnw clean install \
                    -DskipTests \
                    -Dlicense.skip=true \
                    -Ddocker.registry=${DOCKER_REGISTRY} \
                    -Ddocker.tag=${TB_VERSION}-qa
                """
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker-compose -f docker-compose.qa.yml build'
            }
        }

        stage('Deploy to QA') {
            steps {
                sh """
                docker-compose -f docker-compose.qa.yml down || true
                docker-compose -f docker-compose.qa.yml up -d
                """
            }
        }

        stage('Smoke Test') {
            steps {
                sh """
                sleep 30 # Wait for services to start
                curl -I http://localhost:${QA_PORT}/api/health
                """
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        failure {
            slackSend channel: '#qa-alerts',
                     message: "QA Pipeline Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
        }
    }
}
