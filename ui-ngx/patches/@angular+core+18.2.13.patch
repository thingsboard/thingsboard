diff --git a/node_modules/@angular/core/fesm2022/core.mjs b/node_modules/@angular/core/fesm2022/core.mjs
index 7d9d345..b4d21c6 100755
--- a/node_modules/@angular/core/fesm2022/core.mjs
+++ b/node_modules/@angular/core/fesm2022/core.mjs
@@ -12859,13 +12859,13 @@ function findDirectiveDefMatches(tView, tNode) {
             if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {
                 matches || (matches = []);
                 if (isComponentDef(def)) {
-                    if (ngDevMode) {
+                    // if (ngDevMode) {
                         assertTNodeType(tNode, 2 /* TNodeType.Element */, `"${tNode.value}" tags cannot be used as component hosts. ` +
                             `Please use a different tag to activate the ${stringify(def.type)} component.`);
                         if (isComponentHost(tNode)) {
                             throwMultipleComponentError(tNode, matches.find(isComponentDef).type, def.type);
                         }
-                    }
+                    // }
                     // Components are inserted at the front of the matches array so that their lifecycle
                     // hooks run before any directive lifecycle hooks. This appears to be for ViewEngine
                     // compatibility. This logic doesn't make sense with host directives, because it
