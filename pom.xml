<!--

    Copyright Â© 2016-2025 The Thingsboard Authors

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.thingsboard</groupId>
    <artifactId>thingsboard</artifactId>
    <version>4.3.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Thingsboard</name>
    <url>https://thingsboard.io</url>
    <inceptionYear>2016</inceptionYear>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <main.dir>${basedir}</main.dir>
        <pkg.disabled>true</pkg.disabled>
        <pkg.process-resources.phase>none</pkg.process-resources.phase>
        <pkg.package.phase>none</pkg.package.phase>
        <pkg.user>thingsboard</pkg.user>
        <pkg.implementationTitle>${project.name}</pkg.implementationTitle>
        <pkg.unixLogFolder>/var/log/${pkg.name}</pkg.unixLogFolder>
        <pkg.installFolder>/usr/share/${pkg.name}</pkg.installFolder>
        <spring-boot.version>3.4.8</spring-boot.version>
        <javax.xml.bind-api.version>2.4.0-b180830.0359</javax.xml.bind-api.version>
        <jedis.version>5.1.5</jedis.version>
        <jjwt.version>0.12.5</jjwt.version>
        <rat.version>0.10</rat.version> <!-- unused -->
        <cassandra.version>4.17.0</cassandra.version>
        <metrics.version>4.2.25</metrics.version>
        <cassandra-all.version>5.0.4</cassandra-all.version> <!-- tools -->
        <guava.version>33.1.0-jre</guava.version>
        <commons-lang3.version>3.18.0</commons-lang3.version> <!-- to fix CVE-2025-48924. TODO: remove when fixed in spring-boot-dependencies -->
        <commons-io.version>2.16.1</commons-io.version>
        <commons-logging.version>1.3.1</commons-logging.version>
        <commons-csv.version>1.10.0</commons-csv.version>
        <nimbus-jose-jwt.version>10.0.2</nimbus-jose-jwt.version> <!-- to fix CVE-2023-52428, CVE-2025-53864. TODO: remove when fixed in spring-security-oauth2-client and mockserver-netty   -->
        <apache-httpclient.version>4.5.14</apache-httpclient.version>
        <joda-time.version>2.12.7</joda-time.version>
        <auth0-jwt.version>4.4.0</auth0-jwt.version>
        <json-schema-validator.version>1.5.6</json-schema-validator.version>
        <milo.version>0.6.12</milo.version>
        <californium.version>3.12.1</californium.version>
        <leshan.version>2.0.0-M15</leshan.version>
        <mail.version>2.0.1</mail.version>
        <curator.version>5.6.0</curator.version>
        <zookeeper.version>3.9.3</zookeeper.version>
        <protobuf.version>3.25.5</protobuf.version> <!-- A Major v4 does not support by the pubsub yet-->
        <grpc.version>1.68.1</grpc.version>
        <tbel.version>1.2.8</tbel.version>
        <lombok.version>1.18.38</lombok.version>
        <paho.client.version>1.2.5</paho.client.version>
        <paho.mqttv5.client.version>1.2.5</paho.mqttv5.client.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <surefire.version>3.2.5</surefire.version>
        <jar-plugin.version>3.4.0</jar-plugin.version>
        <springdoc-swagger.version>2.8.8TB</springdoc-swagger.version>
        <swagger-annotations.version>2.2.30</swagger-annotations.version>
        <spatial4j.version>0.8</spatial4j.version>
        <jts.version>1.19.0</jts.version>
        <bouncycastle.version>1.78.1</bouncycastle.version>
        <winsw.version>2.0.1</winsw.version>
        <sonar.exclusions>org/thingsboard/server/gen/**/*,
            org/thingsboard/server/extensions/core/plugin/telemetry/gen/**/*
        </sonar.exclusions>
        <delight-nashorn-sandbox.version>0.4.5</delight-nashorn-sandbox.version>
        <nashorn-core.version>15.4</nashorn-core.version>
        <!-- IMPORTANT: If you change the version of the kafka client, make sure to synchronize our overwritten implementation of the
        org.apache.kafka.common.network.NetworkReceive class in the application module. It addresses the issue https://issues.apache.org/jira/browse/KAFKA-4090.
        Here is the source to track https://github.com/apache/kafka/tree/trunk/clients/src/main/java/org/apache/kafka/common/network -->
        <kafka.version>3.9.1</kafka.version>
        <bucket4j.version>8.10.1</bucket4j.version>
        <antlr.version>3.5.3</antlr.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <aws.sdk.version>1.12.701</aws.sdk.version>
        <pubsub.client.version>1.128.1</pubsub.client.version>

        <google-auth-library.version>1.34.0</google-auth-library.version>
        <google-http-client.version>1.46.3</google-http-client.version>
        <google-api-common.version>2.48.0</google-api-common.version>
        <google-api-gax.version>2.65.0</google-api-gax.version>
        <google-proto-common.version>2.37.1</google-proto-common.version>
        <google-proto-iam-v1.version>1.51.0</google-proto-iam-v1.version>

        <passay.version>1.6.4</passay.version>
        <ua-parser.version>1.6.1</ua-parser.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-collections.version>4.4</commons-collections.version>
        <protobuf-dynamic.version>1.0.4TB</protobuf-dynamic.version>
        <wire-schema.version>3.7.1</wire-schema.version>
        <twilio.version>10.1.3</twilio.version>
        <hypersistence-utils.version>3.7.4</hypersistence-utils.version> <!-- artifact name should be updated with hibernate-core version -->
        <jakarta.el.version>4.0.2</jakarta.el.version>
        <antisamy.version>1.7.5</antisamy.version>
        <snmp4j.version>3.8.0</snmp4j.version>
        <langchain4j.version>1.1.0</langchain4j.version>
        <error_prone_annotations.version>2.38.0</error_prone_annotations.version>
        <animal-sniffer-annotations.version>1.24</animal-sniffer-annotations.version>
        <auto-value-annotations.version>1.11.0</auto-value-annotations.version>
        <checker-qual.version>3.49.3</checker-qual.version>
        <perfmark-api.version>0.27.0</perfmark-api.version>
        <threetenbp.version>1.7.0</threetenbp.version>
        <!--         TEST SCOPE         -->
        <dbunit.version>2.7.3</dbunit.version>
        <java-websocket.version>1.5.6</java-websocket.version>
        <mock-server.version>5.15.0</mock-server.version>
        <spring-test-dbunit.version>1.3.0</spring-test-dbunit.version> <!-- 2016 -->
        <takari-cpsuite.version>1.2.7</takari-cpsuite.version> <!-- 2015 -->
        <jeasy.version>5.0.0</jeasy.version>
        <!--      BLACKBOX TEST SCOPE     -->
        <testng.version>7.10.1</testng.version>
        <testcontainers.version>1.20.6</testcontainers.version>
        <testcontainers-junit4-mock.version>1.0.2</testcontainers-junit4-mock.version>
        <zeroturnaround.version>1.12</zeroturnaround.version>
        <webdrivermanager.version>5.8.0</webdrivermanager.version>
        <allure-testng.version>2.27.0</allure-testng.version>
        <allure-maven.version>2.12.0</allure-maven.version>

        <opensmpp.version>3.0.2</opensmpp.version>
        <jgit.version>6.10.1.202505221210-r</jgit.version>
        <exp4j.version>0.4.8</exp4j.version>
        <aerogear-otp.version>1.0.0</aerogear-otp.version>

        <slack-api.version>1.39.0</slack-api.version>
        <oshi.version>6.6.0</oshi.version>
        <google-oauth-client.version>1.35.0</google-oauth-client.version>
        <weisj-jsvg.version>1.6.1</weisj-jsvg.version>
        <drewnoakes-metadata-extractor.version>2.19.0</drewnoakes-metadata-extractor.version>
        <firebase-admin.version>9.2.0</firebase-admin.version>
        <snappy.version>1.1.10.5</snappy.version>
        <rocksdbjni.version>9.10.0</rocksdbjni.version>
    </properties>

    <modules>
        <module>netty-mqtt</module>
        <module>common</module>
        <module>rule-engine</module>
        <module>dao</module>
        <module>edqs</module>
        <module>transport</module>
        <module>ui-ngx</module>
        <module>tools</module>
        <module>application</module>
        <module>msa</module>
        <module>rest-client</module>
        <module>monitoring</module>
    </modules>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- download sources under target/dependencies -->
        <!-- mvn package -Pdownload-dependencies -Dclassifier=sources dependency:copy-dependencies -->
        <profile>
            <id>download-dependencies</id>
            <properties>
                <downloadSources>true</downloadSources>
                <downloadJavadocs>true</downloadJavadocs>
            </properties>
        </profile>

        <profile>
            <id>packaging</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>3.2.0</version>
                            <executions>
                                <execution>
                                    <id>copy-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <excludes>
                                                    <exclude>logback.xml</exclude>
                                                    <exclude>${pkg.name}.yml</exclude>
                                                </excludes>
                                                <filtering>false</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <includes>
                                                    <include>${pkg.name}.yml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-service-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/conf</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-linux-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.linux.dist}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>config</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-linux-init</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.linux.dist}/init</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/init</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-win-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <excludes>
                                                    <exclude>logback.xml</exclude>
                                                    <exclude>${pkg.name}.yml</exclude>
                                                </excludes>
                                                <filtering>false</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <includes>
                                                    <include>${pkg.name}.yml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/conf</directory>
                                                <excludes>
                                                    <exclude>${pkg.name}.conf</exclude>
                                                </excludes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-control</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/control</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/control</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-install</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/bin/install</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/install</directory>
                                                <includes>
                                                    <include>**/*.sh</include>
                                                    <include>**/*.xml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-windows-control</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/windows</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-windows-install</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}/install</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/install</directory>
                                                <includes>
                                                    <include>logback.xml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-data</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/data</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/data</directory>
                                            </resource>
                                            <resource>
                                                <directory>../dao/src/main/resources</directory>
                                                <includes>
                                                    <include>**/*.cql</include>
                                                    <include>**/*.sql</include>
                                                </includes>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-docker-config</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>docker</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-winsw-service</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>copy</goal>
                                    </goals>
                                    <configuration>
                                        <artifactItems>
                                            <artifactItem>
                                                <groupId>com.sun.winsw</groupId>
                                                <artifactId>winsw</artifactId>
                                                <classifier>bin</classifier>
                                                <type>exe</type>
                                                <destFileName>service.exe</destFileName>
                                            </artifactItem>
                                        </artifactItems>
                                        <outputDirectory>${pkg.win.dist}</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <configuration>
                                <excludes>
                                    <exclude>**/logback.xml</exclude>
                                </excludes>
                                <archive>
                                    <manifestEntries>
                                        <Implementation-Title>${pkg.implementationTitle}</Implementation-Title>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <skip>${pkg.disabled}</skip>
                                <mainClass>${pkg.mainClass}</mainClass>
                                <classifier>boot</classifier>
                                <layout>ZIP</layout>
                                <executable>true</executable>
                                <excludeDevtools>true</excludeDevtools>
                                <embeddedLaunchScriptProperties>
                                    <confFolder>${pkg.installFolder}/conf</confFolder>
                                    <logFolder>${pkg.unixLogFolder}</logFolder>
                                    <logFilename>${pkg.name}.out</logFilename>
                                    <initInfoProvides>${pkg.name}</initInfoProvides>
                                </embeddedLaunchScriptProperties>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>repackage</goal>
                                        <goal>build-info</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.thingsboard</groupId>
                            <artifactId>gradle-maven-plugin</artifactId>
                            <configuration>
                                <gradleProjectDirectory>${main.dir}/packaging/${pkg.type}</gradleProjectDirectory>
                                <tasks>
                                    <task>build</task>
                                    <task>buildDeb</task>
                                    <task>buildRpm</task>
                                </tasks>
                                <args>
                                    <arg>-PpackagingDir=${main.dir}/packaging</arg>
                                    <arg>-PprojectBuildDir=${basedir}/target</arg>
                                    <arg>-PprojectVersion=${project.version}</arg>
                                    <arg>
                                        -PmainJar=${project.build.directory}/${project.build.finalName}-boot.${project.packaging}
                                    </arg>
                                    <arg>-PpkgName=${pkg.name}</arg>
                                    <arg>-PpkgUser=${pkg.user}</arg>
                                    <arg>-PpkgInstallFolder=${pkg.installFolder}</arg>
                                    <arg>-PpkgCopyInstallScripts=${pkg.copyInstallScripts}</arg>
                                    <arg>-PpkgLogFolder=${pkg.unixLogFolder}</arg>
                                    <arg>--warning-mode</arg>
                                    <arg>all</arg>
                                </args>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>invoke</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <configuration>
                                <finalName>${pkg.name}</finalName>
                                <descriptors>
                                    <descriptor>${main.dir}/packaging/${pkg.type}/assembly/windows.xml</descriptor>
                                </descriptors>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>assembly</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-install-plugin</artifactId>
                            <configuration>
                                <file>${project.build.directory}/${pkg.name}.deb</file>
                                <artifactId>${project.artifactId}</artifactId>
                                <groupId>${project.groupId}</groupId>
                                <version>${project.version}</version>
                                <classifier>deb</classifier>
                                <packaging>deb</packaging>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>install-deb</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>install-file</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <release>17</release>
                        <compilerArgs>
                            <arg>-Xlint:deprecation</arg>
                            <arg>-Xlint:removal</arg>
                            <arg>-Xlint:unchecked</arg>
                            <arg>-parameters</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.thingsboard</groupId>
                    <artifactId>gradle-maven-plugin</artifactId>
                    <version>1.0.12</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.12.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <argLine>
                            -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=20
                            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-protoc</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.google.protobuf</groupId>
                                        <artifactId>protoc</artifactId>
                                        <version>${protobuf.version}</version>
                                        <classifier>${os.detected.classifier}</classifier>
                                        <type>exe</type>
                                        <overWrite>true</overWrite>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>0.6.1</version>
                    <configuration>
                        <!--
                          The version of protoc must match protobuf-java. If you don't depend on
                          protobuf-java directly, you will be transitively depending on the
                          protobuf-java version that grpc depends on.
                        -->
                        <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                        </protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                        </pluginArtifact>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                                <goal>test-compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.12</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${basedir}/target/generated-sources</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-antrun-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <header>${main.dir}/license-header-template.txt</header>
                        <properties>
                            <owner>The Thingsboard Authors</owner>
                        </properties>
                        <excludes>
                            <exclude>**/.env</exclude>
                            <exclude>**/*.env</exclude>
                            <exclude>**/.eslintrc</exclude>
                            <exclude>**/.babelrc</exclude>
                            <exclude>**/.jshintrc</exclude>
                            <exclude>**/.gradle/**</exclude>
                            <exclude>**/nightwatch</exclude>
                            <exclude>**/README</exclude>
                            <exclude>**/LICENSE</exclude>
                            <exclude>**/banner.txt</exclude>
                            <exclude>node_modules/**</exclude>
                            <exclude>**/*.properties</exclude>
                            <exclude>src/test/resources/**</exclude>
                            <exclude>src/vendor/**</exclude>
                            <exclude>src/font/**</exclude>
                            <exclude>src/sh/**</exclude>
                            <exclude>packaging/*/scripts/control/**</exclude>
                            <exclude>packaging/*/scripts/windows/**</exclude>
                            <exclude>packaging/*/scripts/init/**</exclude>
                            <exclude>**/*.log</exclude>
                            <exclude>**/*.current</exclude>
                            <exclude>.instance_id</exclude>
                            <exclude>src/main/scripts/control/**</exclude>
                            <exclude>src/main/scripts/windows/**</exclude>
                            <exclude>src/main/resources/public/static/rulenode/**</exclude>
                            <exclude>**/*.proto.js</exclude>
                            <exclude>docker/haproxy/**</exclude>
                            <exclude>docker/tb-node/**</exclude>
                            <exclude>ui/**</exclude>
                            <exclude>**/.browserslistrc</exclude>
                            <exclude>**/yarn.lock</exclude>
                            <exclude>**/.yarnrc</exclude>
                            <exclude>**/.angular/**</exclude>
                            <exclude>**/*.raw</exclude>
                            <exclude>**/*.patch</exclude>
                            <exclude>**/apache/cassandra/io/**</exclude>
                            <exclude>.run/**</exclude>
                            <exclude>**/NetworkReceive.java</exclude>
                            <exclude>**/lwm2m-registry/**</exclude>
                            <exclude>**/test/resources/lwm2m/**</exclude>
                            <exclude>**/resources/lwm2m/models/**</exclude>
                            <exclude>src/main/data/resources/**</exclude>
                        </excludes>
                        <mapping>
                            <proto>JAVADOC_STYLE</proto>
                            <cql>DOUBLEDASHES_STYLE</cql>
                            <scss>JAVADOC_STYLE</scss>
                            <jsx>SLASHSTAR_STYLE</jsx>
                            <tsx>SLASHSTAR_STYLE</tsx>
                            <conf>SCRIPT_STYLE</conf>
                            <gradle>JAVADOC_STYLE</gradle>
                        </mapping>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>5.0.0</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
<!--                        <includeOnlyProperties>-->
<!--                            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>-->
<!--                            <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>-->
<!--                        </includeOnlyProperties>-->
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-bom</artifactId>
                <version>${langchain4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>netty-mqtt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>version-control</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>proto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>cache</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>actor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>dao-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>cluster-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>discovery-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.rule-engine</groupId>
                <artifactId>rule-engine-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.rule-engine</groupId>
                <artifactId>rule-engine-components</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>message</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>transport</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>transport-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>mqtt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>http</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>coap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>snmp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>lwm2m</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>edge-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>queue</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>stats</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>coap-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>edqs</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.script</groupId>
                <artifactId>script-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.script</groupId>
                <artifactId>remote-js-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>tools</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>rest-client</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa</groupId>
                <artifactId>js-executor</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa</groupId>
                <artifactId>web-ui</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa</groupId>
                <artifactId>tb-node</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa.transport</groupId>
                <artifactId>coap</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa.transport</groupId>
                <artifactId>http</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa.transport</groupId>
                <artifactId>mqtt</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa.transport</groupId>
                <artifactId>lwm2m</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.msa.transport</groupId>
                <artifactId>snmp</artifactId>
                <version>${project.version}</version>
                <type>docker-info</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>dao</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${javax.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.vaadin.external.google</groupId>
                        <artifactId>android-json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.springtestdbunit</groupId>
                <artifactId>spring-test-dbunit</artifactId>
                <version>${spring-test-dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>${antlr.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${mail.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <scope>test</scope>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver-dns-native-macos</artifactId>
                <classifier>osx-x86_64</classifier>
            </dependency>
            <dependency> <!-- brought by com.microsoft.azure:azure-servicebus -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <classifier>osx-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-core</artifactId>
                <version>${cassandra.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-query-builder</artifactId>
                <version>${cassandra.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jmx</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache-httpclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${auth0-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.networknt</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${json-schema-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-server-cf</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-client-cf</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-server-redis</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-core</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>californium-core</artifactId>
                <version>${californium.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>californium-core</artifactId>
                <version>${californium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>element-connector</artifactId>
                <version>${californium.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>scandium</artifactId>
                <version>${californium.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf-lite</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-rls</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-util</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-googleapis</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-xds</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-services</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-context</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-inprocess</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-grpclb</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-alts</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-auth</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>tbel</artifactId>
                <version>${tbel.version}</version>
            </dependency>
            <dependency>
                <groupId>io.takari.junit</groupId>
                <artifactId>takari-cpsuite</artifactId>
                <version>${takari-cpsuite.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cassandra</groupId>
                <artifactId>cassandra-all</artifactId>
                <version>${cassandra-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.github.bonigarcia</groupId>
                <artifactId>webdrivermanager</artifactId>
                <version>${webdrivermanager.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-testng</artifactId>
                <version>${allure-testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>${allure-maven.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
                <version>${paho.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.mqttv5.client</artifactId>
                <version>${paho.mqttv5.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations-jakarta</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcutil-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-ext-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.winsw</groupId>
                <artifactId>winsw</artifactId>
                <version>${winsw.version}</version>
                <classifier>bin</classifier>
                <type>exe</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.javadelight</groupId>
                <artifactId>delight-nashorn-sandbox</artifactId>
                <version>${delight-nashorn-sandbox.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bucket4j</groupId>
                <artifactId>bucket4j-core</artifactId>
                <version>${bucket4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.spatial4j</groupId>
                <artifactId>spatial4j</artifactId>
                <version>${spatial4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.jts</groupId>
                <artifactId>jts-core</artifactId>
                <version>${jts.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sqs</artifactId>
                <version>${aws.sdk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sns</artifactId>
                <version>${aws.sdk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-lambda</artifactId>
                <version>${aws.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-pubsub</artifactId>
                <version>${pubsub.client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auth</groupId>
                <artifactId>google-auth-library-credentials</artifactId>
                <version>${google-auth-library.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auth</groupId>
                <artifactId>google-auth-library-oauth2-http</artifactId>
                <version>${google-auth-library.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client-gson</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api</groupId>
                <artifactId>api-common</artifactId>
                <version>${google-api-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api</groupId>
                <artifactId>gax</artifactId>
                <version>${google-api-gax.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api</groupId>
                <artifactId>gax-grpc</artifactId>
                <version>${google-api-gax.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api</groupId>
                <artifactId>gax-httpjson</artifactId>
                <version>${google-api-gax.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api.grpc</groupId>
                <artifactId>proto-google-common-protos</artifactId>
                <version>${google-proto-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api.grpc</groupId>
                <artifactId>proto-google-iam-v1</artifactId>
                <version>${google-proto-iam-v1.version}</version>
            </dependency>
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passay.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ua-parser</groupId>
                <artifactId>uap-java</artifactId>
                <version>${ua-parser.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.java-websocket</groupId>
                <artifactId>Java-WebSocket</artifactId>
                <version>${java-websocket.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>protobuf-dynamic</artifactId>
                <version>${protobuf-dynamic.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-schema</artifactId>
                <version>${wire-schema.version}</version>
            </dependency>
            <dependency>
                <groupId>com.twilio.sdk</groupId>
                <artifactId>twilio</artifactId>
                <version>${twilio.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-jackson</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.hypersistence</groupId>
                <artifactId>hypersistence-utils-hibernate-63</artifactId>
                <version>${hypersistence-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el.version}</version>
            </dependency>
            <dependency>
                <groupId>org.owasp.antisamy</groupId>
                <artifactId>antisamy</artifactId>
                <version>${antisamy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.snmp4j</groupId>
                <artifactId>snmp4j</artifactId>
                <version>${snmp4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Mocks the few JUnit 4 classes that testcontainers needs so that JUnit 4 can be excluded.
            Fixes/Works around https://github.com/testcontainers/testcontainers-java/issues/970 -->
            <dependency>
                <groupId>software.xdev</groupId>
                <artifactId>testcontainers-junit4-mock</artifactId>
                <version>${testcontainers-junit4-mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>zt-exec</artifactId>
                <version>${zeroturnaround.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>${mock-server.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-client-java</artifactId>
                <version>${mock-server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jeasy</groupId>
                <artifactId>easy-random-core</artifactId>
                <version>${jeasy.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.opensmpp</groupId>
                <artifactId>opensmpp-core</artifactId>
                <version>${opensmpp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.aerogear</groupId>
                <artifactId>aerogear-otp-java</artifactId>
                <version>${aerogear-otp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.slack.api</groupId>
                <artifactId>slack-api-client</artifactId>
                <version>${slack-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.firebase</groupId>
                <artifactId>firebase-admin</artifactId>
                <version>${firebase-admin.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit.ssh.apache</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>net.objecthunter</groupId>
                <artifactId>exp4j</artifactId>
                <version>${exp4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.nashorn</groupId>
                <artifactId>nashorn-core</artifactId>
                <version>${nashorn-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.oauth-client</groupId>
                <artifactId>google-oauth-client</artifactId>
                <version>${google-oauth-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.weisj</groupId>
                <artifactId>jsvg</artifactId>
                <version>${weisj-jsvg.version}</version>
            </dependency>
            <dependency>
                <groupId>com.drewnoakes</groupId>
                <artifactId>metadata-extractor</artifactId>
                <version>${drewnoakes-metadata-extractor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdbjni.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${error_prone_annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-annotations</artifactId>
                <version>${animal-sniffer-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auto.value</groupId>
                <artifactId>auto-value-annotations</artifactId>
                <version>${auto-value-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>${checker-qual.version}</version>
            </dependency>
            <dependency>
                <groupId>io.perfmark</groupId>
                <artifactId>perfmark-api</artifactId>
                <version>${perfmark-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.threeten</groupId>
                <artifactId>threetenbp</artifactId>
                <version>${threetenbp.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>thingsboard-repo-deploy</id>
            <name>ThingsBoard Repo Deployment</name>
            <url>https://repo.thingsboard.io/artifactory/libs-release-public</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>typesafe</id>
            <name>Typesafe Repository</name>
            <url>https://repo.typesafe.com/typesafe/releases/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public</url>
        </repository>
    </repositories>
</project>
